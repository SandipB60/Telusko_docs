#68 Python Tutorial for Beginners | Linear Search using Python					https://www.youtube.com/watch?v=UldZOLylez4&list=PLsyeobzWxl7poL9JTVyndKe62ieoN-MZ3&index=73
  -----------------------------
lst=[5,8,4,6,9,2]
print(f"Array list: {lst} is of {len(lst)} elements")
#print(len(lst))

v=9
i=0
while i <= len(lst):
    if lst[i]==v:
        print(f" value {v} is at {i+1} position")
        break
    i+=1
print("end")
  ----------------
Array list: [5, 8, 4, 6, 9, 2] is of 6 elements
 value 9 is at 5 position
end
  ++++++++++++++++++++++

class search_class:
    def __init__(self, v=9, lst=[]):
        self.v=v
        self.lst=lst

    def search(self,v,lst):
        print(f"Array list: {lst} is of {len(lst)} elements")
        #lst = [5, 8, 4, 6, 9, 2]
        i=0
        while i <= len(lst):
            if lst[i]==v:
                print(f" value {v} is at {i+1} position")
                break
            i+=1
        print("End")

n=8
lst=[5,8,4,6,9,2]
x=search_class(n,lst)
x.search(n,lst)
  ------------------------
Array list: [5, 8, 4, 6, 9, 2] is of 6 elements
 value 8 is at 2 position
End
  +++++++++++++++++++++++++++++
class search_class:
    def __init__(self, v=9, lst=[]):
        self.v=v
        self.lst=lst

    def search(self):
        print(f"Array list: {lst} is of {len(lst)} elements")
        #lst = [5, 8, 4, 6, 9, 2]
        i=0
        while i <= len(lst):
            if lst[i]==self.v:
                print(f" value {self.v} is at {i+1} position")
                break
            i+=1
        print("End")

n=8
lst=[5,8,4,6,9,2]
x=search_class(n,lst)
x.search()
  ----------------------
Array list: [5, 8, 4, 6, 9, 2] is of 6 elements
 value 8 is at 2 position
End
  +++++++++++++++++++++++++++++


class search_class:
    def __init__(self, v=9, lst=[]):
        self.v=v
        self.lst=lst

    def search(self):
        print(f"Array list: {lst} is of {len(lst)} elements")
        #lst = [5, 8, 4, 6, 9, 2]
        i=0
        while i <= len(lst):
            if lst[i]==self.v:
                print(f" value {self.v} is at {i+1} position")
                return True
            i += 1
        return False

        print("End")

n=8
lst=[5,8,4,6,9,2]
x=search_class(n,lst)
x.search() 
  -----------------------------

  +++++++++++++++++++++++++++


class search_class:
    def __init__(self, v=9, lst=[]):
        self.v=v
        self.lst=lst

    def search(self):
        print(f"Array list: {lst} is of {len(lst)} elements")
        #lst = [5, 8, 4, 6, 9, 2]
        i=0
        while i < len(lst):
            if lst[i]==self.v:
                print(f" value {self.v} is at {i+1} position")
                print("End")
                return True
            i += 1
        print(f"Value: {self.v} is not found in list:{lst}")
        print("End")
        return False



n=11
lst=[5,8,4,6,9,2]
x=search_class(n,lst)
x.search()
  --------------------
Array list: [5, 8, 4, 6, 9, 2] is of 6 elements
Value: 11 is not found in list:[5, 8, 4, 6, 9, 2]
End
  ++++++++++++++++++++

class search_class:
    pos=-1
    def __init__(self, v=9, lst=[]):
        self.v=v
        self.lst=lst

    def search(self):
        print(f"Array list: {lst} is of {len(lst)} elements")
        #lst = [5, 8, 4, 6, 9, 2]
        i=0
        while i < len(lst):
            if lst[i]==self.v:
                print(f" value {self.v} is at {i+1} position")
                globals()['pos']=i
                print("End")
                return True
            i += 1
        print(f"Value: {self.v} is not found in list:{lst}")
        print("End")
        return False



n=11
lst=[5,8,4,6,9,2]
x=search_class(n,lst)
x.search()

print(f" value {n} is at {x.pos} position")
  --------------------
Array list: [5, 8, 4, 6, 9, 2] is of 6 elements
Value: 11 is not found in list:[5, 8, 4, 6, 9, 2]
End
 value 11 is at -1 position
  ++++++++++++++++++++++++++++++++++
pos=-1
def search(v,lst):
     print(f"Array list: {lst} is of {len(lst)} elements")
        #lst = [5, 8, 4, 6, 9, 2]
     i=0
     while i < len(lst):
            if lst[i]==v:
                print(" value {v} is at {i+1} position",format(v),(i+1))
                globals()['pos']=i
                print("End")
                return True
            i += 1
     print("Value: {v} is not found in list:{}", format(v),(lst))
     print("End")
     return False

n=9
lst=[5,8,4,6,9,2]
#x=search(n,lst)
if search(n,lst) == True:
    print("Value: {n} is not found in lst:{}", format(n), (lst))
else:
    print("Value: {n} is not found in lst:{}", format(n), (lst))
  -------------------------
Array list: [5, 8, 4, 6, 9, 2] is of 6 elements
 value {v} is at {i+1} position 9 5
End
Value: {n} is not found in lst:{} 9 [5, 8, 4, 6, 9, 2]
  +++++++++++++++++++++++++++++++++++++
pos=-1
def search(v,lst):
     print(f"Array list: {lst} is of {len(lst)} elements")
     for i in range(len(lst)):
            if lst[i]==v:
                print(" value {v} is at {i+1} position",format(v),(i+1))
                globals()['pos']=i
                print("End")
                return True
     print("Value: {v} is not found in list:{}", format(v),(lst))
     print("End")
     return False

n=9
lst=[5,8,4,6,9,2]
#x=search(n,lst)
if search(n,lst) == True:
    print("Value: {n} is not found in lst:{}", format(n), (lst))
else:
    print("Value: {n} is not found in lst:{}", format(n), (lst))
  ------------------------
Array list: [5, 8, 4, 6, 9, 2] is of 6 elements
 value {v} is at {i+1} position 9 5
End
Value: {n} is not found in lst:{} 9 [5, 8, 4, 6, 9, 2]
  +++++++++++++++++++++++++++++++++
 ##my try
pos=-1
tt1=0
def search(v,lst):
     print(f"Array list: {lst} is of {len(lst)} elements")
     tt2=0
     for i in range(len(lst)):
            if lst[i]==v:
                print(" value {v} is at {i+1} position",format(v),(i+1))
                globals()['pos']=i
                globals()['tt1'] = i
                print(f"tt2a={tt2}")
                tt2=i
                print("End")
                print(f"tt2b={tt2}")
                return True
     print("Value: {v} is not found in list:{}", format(v),(lst))
     print("End")
     return False

n=9
lst=[5,8,4,6,9,2]
#x=search(n,lst)
if search(n,lst) == True:
    print("Value: {n} is not found in lst:{}", format(n), (lst))
else:
    print("Value: {n} is not found in lst:{}", format(n), (lst))

print(f"pos={pos}")

print(f"tt1={tt1}")
print("-------")
print(f"tt2c={tt2}")
   +++++++++++++++++++++++++++++++++
cnt=0
glow=0
gupp=0
glnth=0
def fn_prnt(tag,cnt, low,upp,mid0, mid1,mid2,alow, aupp,lnth,srch,arr):
    #print(f"{tag}-cnt= {cnt},low={low}, upp={upp}, lnth={lnth}, srch={srch}, arr={arr} ")
    #print(f"{tag}-low={low}, upp={upp}, lnth={lnth}, arr[low]={arr[low]},  arr[upp]={arr[upp]}, srch={srch}, arr={arr} ")
    print(f"{tag}-cnt= {cnt},low={low}, upp={upp}, lnth={lnth}, arr[low]={alow},  arr[upp-low-1]={aupp}, mid0={mid0},mid1={mid1},mid2={mid2} srch={srch}, arr={arr} ")
    #print(f"{tag}-cnt= {cnt},low={low}, upp={upp}, lnth={lnth},  arr[upp-low-1]={arr[upp -low- 1]}, srch={srch}, arr={arr} ")

def bn_src_arry(low,upp,lnth):
    global cnt
    global glow
    global gupp
    global glnth
    print("---------------------------------------------------")
    print(f"low={low}...upp-low={(upp-low)}")
    fn_prnt("AO-before while --",cnt, low, upp,999,999,999,777,arr[upp-1],lnth, srch, arr)
    #while lnth != 1:
    while (upp-low) > 0:
    #while  cnt <= 10:
        if (upp-low) < 0:
            print("less than 0")
            break
        fn_prnt("AO-inside while--", cnt, low, upp,999,999,999, arr[low],arr[upp-1],lnth, srch, arr)
        cnt=cnt+1
        print(f"00--before %2 eval--(upp-low)%2={(upp - low) % 2}")
        if (upp-low)%2 == 1:
            print(f"01--odd-(upp-low)%2={(upp - low) % 2}")
            mid0=(int((upp-low)/2))+low
            print(f"plc:mid0= {mid0} :arr[mid0]={arr[mid0]}-- low={low} upp={upp} arr[low]={arr[low]} arr[upp-1]={arr[upp-1]}")
            #fn_prnt("A1", cnt,low, upp, lnth, srch, arr)
            #fn_prnt("A2", cnt, int(lnth/2), upp, lnth, srch, arr)
            #mid0=low+mid0
            if arr[mid0]==srch:
                print(f"Got it-1: {srch}:: at pos:{low}{upp}")
                fn_prnt("B",cnt, low, upp,arr[mid0],999,999,arr[low],arr[upp-1], lnth, srch, arr)
                break
            else:
                if srch > arr[mid0]:
                    fn_prnt("CA", cnt,low, upp,arr[mid0],999,999, arr[low],arr[upp-1],lnth, srch, arr)
                    low=low+(mid0)
                    upp=upp
                    lnth = upp - low
                    fn_prnt("CB", cnt, low, upp, arr[mid0], 999, 999,arr[low],arr[upp-1], lnth, srch, arr)
                    bn_src_arry(low, upp,lnth)
                elif arr[mid0] > srch:
                    fn_prnt("DA", cnt,low, upp,arr[mid0],999,999,arr[low],arr[upp-1], lnth, srch, arr)
                    #low = low
                    low=low
                    #upp = upp - (int((upp-low) / 2))
                    upp=upp-mid0
                    lnth = upp - low
                    fn_prnt("DB", cnt, low, upp, arr[mid0], 999, 999,arr[low],arr[upp-1], lnth, srch, arr)
                    bn_src_arry(low, upp,lnth)
                else:
                    fn_prnt("xxx", cnt, low, upp,arr[mid0],999,999,arr[low],arr[upp-1], lnth, srch, arr)
        elif (upp-low)%2 == 0:
            print(f"03A-even-(upp-low)%2={(upp - low) % 2}::low= {low}: upp= {upp}")
            pos1=(int((upp-low)/2)-1)
            pos2= (int((upp-low)/2)-0)
            pos1=low+pos1
            pos2=low+pos2
            print(f"03B-pos1={pos1} pos2={pos2}::arr[pos1]={arr[pos1]} : arr[pos2]={arr[pos2]}::srch={srch}")
            #pos1=low+pos1
            #pos2=low+pos2
            if arr[(pos1)]==srch or arr[(pos2)] ==srch:
                fn_prnt("E1A", cnt,low, upp,999,arr[pos1],arr[pos2],arr[low],arr[upp-1],lnth, srch, arr)
                print(f"Got it-2: {srch}:: at pos:{low}{upp}")
                break
            else:
                if srch > arr[(pos2)]:
                    print(f"FA--pos1={pos1} : pos2={pos2}: arr[pos1]={arr[pos1]} : arr[pos2]={arr[pos2]}" )
                    fn_prnt("FA", cnt,low, upp,999,arr[pos1],arr[pos2],arr[low],arr[upp-1], lnth, srch, arr)
                    #low = low + (int(lnth/2)+1)
                    low = low + (pos2)
                    upp = upp
                    lnth = upp - low

                    print(f"FB--pos1={pos1} : pos2={pos2}: arr[pos1]={arr[pos1]} : arr[pos2]={arr[pos2]}")
                    fn_prnt("FB", cnt, low, upp, 999, arr[pos1],arr[pos2],777,arr[upp-1], lnth, srch, arr)
                    bn_src_arry(low, upp,lnth)
                elif arr[pos1] > srch:
                    fn_prnt("GA", cnt,low, upp,999,arr[pos1],arr[pos2], arr[low],arr[upp-1],lnth, srch, arr)
                    #low = low
                    low=low
                    upp = upp - (pos1)
                    lnth = upp - low
                    fn_prnt("GB", cnt, low, upp, 999, arr[pos1],arr[pos2], arr[low],arr[upp-1],lnth, srch, arr)
                    bn_src_arry(low, upp,lnth)
                else:
                    #print("equal-nothing-2")
                    fn_prnt("yyy", cnt, low, upp,999,pos1,pos2,arr[low],arr[upp-1], lnth, srch, arr)
        else:
            print(f"04-(upp-low)%2={(upp - low) % 2}")



srch=89
#srch=6
arr=[5, 6, 7, 8, 9, 56, 59,83,87,89,91]
##srch=56
##arr=[5, 6, 7, 8, 9, 56, 59,83,87,89,91]
low=0
upp=len(arr)
lnth=upp-low
print(f"low={low} upp={upp} :: {arr[low]} : {arr[upp-1]}:: len={len(arr)} ::{arr}")
bn_src_arry(low, upp,lnth)

  ++++++++++++++++++++++++++++++++++++++++++++



