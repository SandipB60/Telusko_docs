#6 Python Tutorial for Beginners | Tuple | Set in Python					https://www.youtube.com/watch?v=Mf7eFtbVxFM&list=PLsyeobzWxl7poL9JTVyndKe62ieoN-MZ3&index=7
  +++++++++++++++++++++++++++++++++++++
Tuple immutable.
since immutable, iteration is faster..
>>> tup=(21,36,14,25)
>>> tup
(21, 36, 14, 25)
>>
>>> tup(1)
Traceback (most recent call last):
  File "<pyshell#2>", line 1, in <module>
    tup(1)
TypeError: 'tuple' object is not callable
>>> tup[1]
36
>>> tup[0]
21
>>> 
>>> tup[0]=1
Traceback (most recent call last):
  File "<pyshell#5>", line 1, in <module>
    tup[0]=1
TypeError: 'tuple' object does not support item assignment
>>> tupl=(21,36,14,25,21,25,25,25,100,21)
>>> tup.index(36)
1
>>> tup.count(25)
1
>>> tupl=(21,36,14,25,21,25,25,25,100,21)
>>> tupl.count(25)
4
>>> 
  +++++++++++++++++++++++++++++++++++++
set...has # algo...fast
index is not supported in set as there is no seq
duplicate values are removed while displaying

s={22,25,14,21,5,5}


s={25,14,98,63,75,98}

>>> s[0]
Traceback (most recent call last):
  File "<pyshell#19>", line 1, in <module>
    s[0]
TypeError: 'set' object is not subscriptable
>>> s[1]
Traceback (most recent call last):
  File "<pyshell#20>", line 1, in <module>
    s[1]
TypeError: 'set' object is not subscriptable
>>> s.update(98)
Traceback (most recent call last):
  File "<pyshell#21>", line 1, in <module>
    s.update(98)
TypeError: 'int' object is not iterable
>>> s
{98, 75, 14, 25, 63}
>>> s.add(99)
>>> s
{98, 99, 75, 14, 25, 63}
>>> s.add(40)
>>> s
{98, 99, 40, 75, 14, 25, 63}
>>> 
>>> s={22,25,14,21,5,5}
>>> s
{5, 14, 21, 22, 25}
>>> 
  +++++++++++++++++++++++++++++++++++++